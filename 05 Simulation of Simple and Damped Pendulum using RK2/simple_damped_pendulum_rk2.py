# -*- coding: utf-8 -*-
"""simple-damped-pendulum-rk2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FucCQcsGnfWziYd99dFK3Q51TjHD2K-X
"""

import numpy as np
import matplotlib.pyplot as plt

def rk2_update(theta_i, omega_i, dt, b, g, L):
    theta_mid = theta_i + 0.5 * dt * omega_i
    omega_mid = omega_i + 0.5 * dt * (-b * omega_i - (g / L) * np.sin(theta_i))

    k2_theta = omega_mid
    k2_omega = -b * omega_mid - (g / L) * np.sin(theta_mid)

    theta_next = theta_i + dt * k2_theta
    omega_next = omega_i + dt * k2_omega

    return theta_next, omega_next

g = 9.81
m = 1.0
L = 1.0
b = 0.2
theta0 = np.pi / 4
omega0 = 0.0
dt = 0.01
T = 10
N = int(T / dt)

theta = np.zeros(N)
omega = np.zeros(N)
time = np.zeros(N)

theta[0] = theta0
omega[0] = omega0
time[0] = 0.0

for i in range(N - 1):
    theta[i+1], omega[i+1] = rk2_update(theta[i], omega[i], dt, b, g, L)
    time[i+1] = time[i] + dt

angular_momentum = m * L**2 * omega

plt.figure(figsize=(12, 5))

plt.subplot(1, 2, 1)
plt.plot(time, theta)
plt.xlabel('Time (s)')
plt.ylabel('Angle (rad)')
plt.title('Pendulum Motion')
plt.grid(True)

plt.subplot(1, 2, 2)
plt.plot(theta, angular_momentum)
plt.xlabel('Angle (rad)')
plt.ylabel('Angular Momentum (kg·m²/s)')
plt.title('Phase Space Trajectory')
plt.grid(True)

plt.tight_layout()
plt.show()